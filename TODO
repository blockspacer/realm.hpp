TODO/Roadmap

Version 0.1.5 (Small fixes):

* more update hooks (pre_update, post_update etc)

* better system dependency resolution (impl. DAG graph)

* create a way to visualize system execution (with ex. https://graphviz.org/)

* optimize get_singleton (currently 1.3x iteration time)

* optimize overall

* better tests/benchs (and link library)

* better/more comments 

* error handling

* update readme, fix typos better explainations etc.

* generate & host documentation

Version 0.2:

* add a snapshotting feature for syncing of entities in ex multiplayer games

* system functions such as disable, enable

* fix view to support realm::entity

* re-add concepts instead of enable_if

Further features:

* when more c++20 features are default impl. modules, coroutines & ranges

* add shared components (components that will never change)

* allow undefined allocation capacity, eg. grow when needed

* add tag/flag components (components who doesnt occupy memory, no data)

* integrate conan

* impl. advanced component fetch_types / event-system in queries ex,
    * emit<pos>     -> doesnt query pos but declares that it will create pos as an event
        note: fetches emitter<pos> in query with function .emit(pos&& p) that will emit and event to the event stack in world

    * listen<pos>   -> declares the query will listen on emit of pos (allows creation of a DAG graph of systems)

    * changed<pos>  -> query is called only if pos is changed
    
    * value constraits such as:
        * bigger<pos, {20, 20}> (has to implement operator</>)
        * smaller<pos, {20,20}>
        * etc...

    * not<pos>      -> exclude a component in a query

* event-based reactive queries
    example: query::changed(&world, [](pos& p){ /* do stuff */} )
    note: query is only called if an archetype_chunk the query matches has changed since last check
